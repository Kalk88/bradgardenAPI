FORMAT: 1A
HOST: http://TBD.something

# BrädgårdenStats
BrädgårdenStats is the key to finding who the best bord game player in Brädgården really is. 
The API contains members & games in Brädgården and stats from bord game sessions.

# Group Endpoints
### Get Endpoints [GET /api/endpoints]
Retrives a list of callable endpoints.

+ Response 200 (application/json)

    + Attributes(array[Endpoint])
    
# Group Members
## Collection Members [/api/members]
A member is represented with their first and last name. By accessing a specific member url 
more indepth information such as games played and winrate is accquierd.

### Add Member [POST]
This operation adds a member to the collection. It take the first and last name of the member as a JSON object.
+  Request (application/json)
    + Headers

                 Authorization: 1234Example
    + Attributes(Member)

+ Response 201 (application/json)
    + Headers

                 Location: /api/members/id
    + Attributes
        + id: 1 (number) - Id of member.

### Get Members [GET /api/members{?pageSize,pageStart}]
This operation retrives an array of members. Each member object contains a first name, last name and an id.
+ Parameters 
    + pageSize: 10 (number, optional)
    + pageStart: 5 (number, optional)
        + Default: 0
+  Request 
    + Headers

                 Authorization: 1234Example

+ Response 200 (application/json)
    + Attributes (array[MemberWithId])

### Single Member [/api/members/{id}]
+ Parameters
    + id: 1 (number) - Id of member.

### Get a Member [GET]
This operation retrive a single member with more information than get members. 
+  Request 
    + Headers

                 Authorization: 1234Example

+ Response 200 (application/json)
    + Attributes (array[MemberWithStats])

### Update Member [PUT]
This operation updates a member in the collection. 
+  Request (application/json)
    + Headers

                 Authorization: 1234Example
    + Attributes(MemberWithId)

+ Response 200 (application/json)
    + Headers

                 Location: /api/members/id
    + Attributes
        + id: 1 (number) - Id of member.

### Remove Member [DELETE]
This operation removes a member permanently from the collection. Use with caution as all stats will be lost.
+  Request 
    + Headers

                 Authorization: 1234Example

+ Response 204 (application/json)

# Group Games
## Collection Games [/api/games]
A record of a games owned by Brädgården.
### Add Game [POST]
This operation adds a game to the collection.
+  Request (application/json)
    + Headers

                 Authorization: 1234Example
    + Attributes(Game)

+ Response 201 (application/json)
    + Headers

                 Location: /api/members/id
    + Attributes
        + id: 1 (number) - Id of game.

### Get Games [GET /api/games{?pageSize,pageStart}]
This operation retrives a list of board games. may be filtered with query parameters.
+ Parameters 
    + pageSize: 10 (number, optional)
    + pageStart: 5 (number, optional)
        + Default: 0
+  Request
    + Headers

                 Authorization: 1234Example

+ Response 200 (application/json)
    + Attributes(array[GameWithId])

## Single Game [/api/games/{id}]
+ Parameters
    + id: 1 (number) - Id of game.

### Update Game [PUT]
This operation updates a game in the collection.
+  Request (application/json)
    + Headers

                 Authorization: 1234Example
    + Attributes (Game)

+ Response 200 (application/json)
    + Headers

                 Location: /api/members/id
    + Attributes
        + id: 1 (number) - Id of game.

### Remove Game [DELETE]
+  Request
    + Headers

                 Authorization: 1234Example

+ Response 204 (application/json)

# Group Sessions
## Collection Sessions [/api/sessions]
Sessions contains data about who won against who in what game at some point in time.
### Add Session [POST]
This operation adds a game session to the collection.
+  Request (application/json)
    + Headers

                 Authorization: 1234Example
    + Attributes(array[Session])

+ Response 201 (application/json)
    + Headers

                 Location: /api/members/id
    + Attributes
        + id: 1 (number) - Id of session.

### Get Session [GET /api/sessions{?pageSize,pageStart}]
This operation returns a list of sessions from the collection. 
May be filtered with query parameters.
+ Parameters 
    + pageSize: 10 (number, optional)
    + pageStart: 5 (number, optional)
        + Default: 0
+  Request 
    + Headers

                 Authorization: 1234Example

+ Response 200 (application/json)
    + Attributes(array[SessionWithId])


# Single Session [/api/sessions/{id}]
+ Parameters
    + id: 1 (number) - Id of session

### Remove Session [DELETE]
This operation removes a session from the collection.
+  Request 
    + Headers

                Authorization: requestHeader

+ Response 204 (application/json)

# Data Structures

## Endpoint
- name: endpoint (string, required)

## MemberWithStats
- include MemberWithId
- wins: 10 (number, required)
- winRatio: 0.90 (number, required)
- gamesPlayed: 9010 (number, required)
- timesTraitor: 9000 (number, required)
- traitorRatio: 0.33(number, required)

## MemberWithId (object)
- id: 1 (number, required)
- include Member

## Member (object)
- firstName: Jens (required)
- lastName: Johnny (required)

## GameWithId (object)
- id: 1 (number, required)
- include Game

## Game (object)
- name: name of the game (required)
- maxNumberOfPlayers: 6 (number, required)
- traitor: boolean (string, required)
- co-op: boolean (string, required)

## SessionWithId (object)
- id: 1 (number, required)
- gamePlayed: 1 (number, required)
- date: 20/5/2017 (string, required)
- winners (array[MemberWithId], required)
- losers (array[MemberWithId], required)
- traitors (array[MemberWithId], required)

## Session (object)
- gamePlayed: 5 (number, required)
- winners: 1 (array, required)
- losers: 2, 3 (array, required)
- traitors: 1 (array, optional)